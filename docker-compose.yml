services:
  mock:
    build: 
      context: ./backend/mock
      dockerfile: ./docker/Dockerfile
    ports:
      - "8001:8001"
    environment:
      - SECRET_KEY=changeme
      - DEBUG=True
      - ALLOWED_HOSTS=localhost,127.0.0.1,mock
      - KEYS_DIR=/keys
      - POSTGRES_DB=db
      - POSTGRES_HOST=db
      - POSTGRES_PORT=5432
      - POSTGRES_RUNTIME_USER=django
      - POSTGRES_RUNTIME_PASSWORD=django
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=admin
      - DJANGO_SUPERUSER_USERNAME=admin
      - DJANGO_SUPERUSER_PASSWORD=adminpassword
      - DJANGO_SUPERUSER_EMAIL=admin@example.com
    depends_on:
      db:
        condition: service_healthy

  db:
    build: ./db
    environment:
      POSTGRES_DB: db
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
      POSTGRES_RUNTIME_USER: django
      POSTGRES_RUNTIME_PASSWORD: django
    volumes:
      - db_data:/var/lib/postgresql/data
    healthcheck:
        test: ["CMD", "pg_isready", "-U", "user", "-d", "my_project_db"]
        interval: 10s
        retries: 5
        start_period: 5s
        timeout: 5s
  
  router:
    build: ./router
    ports:
      - "4000:4000"
    volumes:
      - supergraph:/dist/schema
    command:
      - -c
      - /dist/config/router.yaml
      - -s
      - /dist/schema/supergraph.graphql

  rover:
    build:
      context: ./rover
      dockerfile: ./docker/Dockerfile
    volumes:
      - supergraph:/supergraph
      - ./rover/output:/output
                
networks:
  backend:
    driver: bridge

volumes:
  db_data:
  supergraph:
            